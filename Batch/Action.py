# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Batch

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class Action(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Action()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsAction(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # Action
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Action
    def MapId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Action
    def CharIndex(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Action
    def MoveAction(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Action
    def AttackAction(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Action
    def View(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def Start(builder): builder.StartObject(5)
def ActionStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddMapId(builder, mapId): builder.PrependInt32Slot(0, mapId, 0)
def ActionAddMapId(builder, mapId):
    """This method is deprecated. Please switch to AddMapId."""
    return AddMapId(builder, mapId)
def AddCharIndex(builder, charIndex): builder.PrependInt32Slot(1, charIndex, 0)
def ActionAddCharIndex(builder, charIndex):
    """This method is deprecated. Please switch to AddCharIndex."""
    return AddCharIndex(builder, charIndex)
def AddMoveAction(builder, moveAction): builder.PrependInt32Slot(2, moveAction, 0)
def ActionAddMoveAction(builder, moveAction):
    """This method is deprecated. Please switch to AddMoveAction."""
    return AddMoveAction(builder, moveAction)
def AddAttackAction(builder, attackAction): builder.PrependInt32Slot(3, attackAction, 0)
def ActionAddAttackAction(builder, attackAction):
    """This method is deprecated. Please switch to AddAttackAction."""
    return AddAttackAction(builder, attackAction)
def AddView(builder, view): builder.PrependInt32Slot(4, view, 0)
def ActionAddView(builder, view):
    """This method is deprecated. Please switch to AddView."""
    return AddView(builder, view)
def End(builder): return builder.EndObject()
def ActionEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)