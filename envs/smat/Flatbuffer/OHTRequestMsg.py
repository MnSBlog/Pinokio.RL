# automatically generated by the FlatBuffers compiler, do not modify

# namespace: OHTMsg

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class OHTRequestMsg(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = OHTRequestMsg()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsOHTRequestMsg(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # OHTRequestMsg
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # OHTRequestMsg
    def Type(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # OHTRequestMsg
    def OhtId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # OHTRequestMsg
    def PrevState(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 1))
        return 0

    # OHTRequestMsg
    def PrevStateAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Uint8Flags, o)
        return 0

    # OHTRequestMsg
    def PrevStateLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # OHTRequestMsg
    def PrevStateIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        return o == 0

    # OHTRequestMsg
    def PrevAction(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # OHTRequestMsg
    def Reward(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # OHTRequestMsg
    def State(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 1))
        return 0

    # OHTRequestMsg
    def StateAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Float32Flags, o)
        return 0

    # OHTRequestMsg
    def StateLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # OHTRequestMsg
    def StateIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        return o == 0

    # OHTRequestMsg
    def Done(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

def Start(builder): builder.StartObject(7)
def OHTRequestMsgStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddType(builder, type): builder.PrependInt8Slot(0, type, 0)
def OHTRequestMsgAddType(builder, type):
    """This method is deprecated. Please switch to AddType."""
    return AddType(builder, type)
def AddOhtId(builder, ohtId): builder.PrependInt32Slot(1, ohtId, 0)
def OHTRequestMsgAddOhtId(builder, ohtId):
    """This method is deprecated. Please switch to AddOhtId."""
    return AddOhtId(builder, ohtId)
def AddPrevState(builder, prevState): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(prevState), 0)
def OHTRequestMsgAddPrevState(builder, prevState):
    """This method is deprecated. Please switch to AddPrevState."""
    return AddPrevState(builder, prevState)
def StartPrevStateVector(builder, numElems): return builder.StartVector(1, numElems, 1)
def OHTRequestMsgStartPrevStateVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartPrevStateVector(builder, numElems)
def AddPrevAction(builder, prevAction): builder.PrependInt32Slot(3, prevAction, 0)
def OHTRequestMsgAddPrevAction(builder, prevAction):
    """This method is deprecated. Please switch to AddPrevAction."""
    return AddPrevAction(builder, prevAction)
def AddReward(builder, reward): builder.PrependFloat32Slot(4, reward, 0.0)
def OHTRequestMsgAddReward(builder, reward):
    """This method is deprecated. Please switch to AddReward."""
    return AddReward(builder, reward)
def AddState(builder, state): builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(state), 0)
def OHTRequestMsgAddState(builder, state):
    """This method is deprecated. Please switch to AddState."""
    return AddState(builder, state)
def StartStateVector(builder, numElems): return builder.StartVector(1, numElems, 1)
def OHTRequestMsgStartStateVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartStateVector(builder, numElems)
def AddDone(builder, done): builder.PrependBoolSlot(6, done, 0)
def OHTRequestMsgAddDone(builder, done):
    """This method is deprecated. Please switch to AddDone."""
    return AddDone(builder, done)
def End(builder): return builder.EndObject()
def OHTRequestMsgEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)