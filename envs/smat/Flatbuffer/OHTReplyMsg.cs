// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace OHTMsg
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct OHTReplyMsg : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static OHTReplyMsg GetRootAsOHTReplyMsg(ByteBuffer _bb) { return GetRootAsOHTReplyMsg(_bb, new OHTReplyMsg()); }
  public static OHTReplyMsg GetRootAsOHTReplyMsg(ByteBuffer _bb, OHTReplyMsg obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public OHTReplyMsg __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public OHTMsg.MsgType Type { get { int o = __p.__offset(4); return o != 0 ? (OHTMsg.MsgType)__p.bb.GetSbyte(o + __p.bb_pos) : OHTMsg.MsgType.None; } }
  public int OhtId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Action { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<OHTMsg.OHTReplyMsg> CreateOHTReplyMsg(FlatBufferBuilder builder,
      OHTMsg.MsgType type = OHTMsg.MsgType.None,
      int oht_id = 0,
      int action = 0) {
    builder.StartTable(3);
    OHTReplyMsg.AddAction(builder, action);
    OHTReplyMsg.AddOhtId(builder, oht_id);
    OHTReplyMsg.AddType(builder, type);
    return OHTReplyMsg.EndOHTReplyMsg(builder);
  }

  public static void StartOHTReplyMsg(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddType(FlatBufferBuilder builder, OHTMsg.MsgType type) { builder.AddSbyte(0, (sbyte)type, 0); }
  public static void AddOhtId(FlatBufferBuilder builder, int ohtId) { builder.AddInt(1, ohtId, 0); }
  public static void AddAction(FlatBufferBuilder builder, int action) { builder.AddInt(2, action, 0); }
  public static Offset<OHTMsg.OHTReplyMsg> EndOHTReplyMsg(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<OHTMsg.OHTReplyMsg>(o);
  }
};


}
